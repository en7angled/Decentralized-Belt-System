#### GENERAL SETUP ####
export PROJECT_ROOT=$(git rev-parse --show-toplevel)

# Source and watch the .env file:
dotenv
watch_file .env

#### LOAD NIX ENVIRONMENT ####

# Allow unfree packages (for closed-source VS Code extensions):
export NIXPKGS_ALLOW_UNFREE=1

# Disable Boehm garbage collection on Macs to prevent seg-fault
if [[ "$(uname)" == "Darwin" ]]; then
    export GC_DONT_GC=1
fi

# https://github.com/nix-community/nix-direnv A fast, persistent use_nix/use_flake implementation for direnv:
if ! has nix_direnv_version || ! nix_direnv_version 3.0.6; then
    source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/3.0.6/direnvrc" "sha256-RYcUJaRMf8oF5LznDrlCXbkOQrywm0HDv1VjYGaJGdM="
fi

# Load the Nix environment from devx
PATH_add $(nix build --print-out-paths nixpkgs#git)/bin
PATH_add .cabal/bin
if use flake "github:input-output-hk/devx?rev=d316c0394de3c72abd2d79d1b55a3b6abc9d0f0c#ghc96-iog-full"; then
    export BJJ_ENV_LOADED=true

    # Build cabal project locally
    export CABAL_DIR="$PROJECT_ROOT/.cabal"

    # Create symlink to Nix HLS binary (prevents conflict with GHCup binaries)
    just link-hls

    # Set up pkg-config paths for liblzma
    export PKG_CONFIG_PATH_FOR_TARGET="$PKG_CONFIG_PATH_FOR_TARGET"

    echo "Decentralized Belt System environment loaded successfully"
else
    echo "Error loading the environment!"
    exit 1
fi
