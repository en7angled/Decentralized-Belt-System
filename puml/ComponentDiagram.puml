@startuml ComponentDiagram
!theme toy

title "Components Diagram"
caption: BJJ-DApp - Decentalized Belt System for Brazilian Jiu Jitsu


skinparam interface {
    BackgroundColor Orange
}

skinparam component {
    BackgroundColor<<DApp>> Orange
    FontSize Black

    BackgroundColor<<3rdParty>> LightCoral
    BackgroundColor<<Cardano>> Blue
    FontColor<<Cardano>>  White
}

skinparam cloud {
    BackgroundColor LightBlue
}
skinparam usecase {
    BackgroundColor DarkOrange
    FontColor White
}


Actor User
Actor Admin

component WebBrowser #LightGray {
    component BrowserWallet as "Browser Wallet\neg. Eternl,Lace..." <<3rdParty>>
    component UI as "FrontEnd" <<DApp>>
}





component BackEnd  as "BackEnd Services"  #LightGray   {

    component AdminCLI as "Admin CLI\n" <<DApp>>

    component CardanoProvider <<Cardano>> as "Cardano\nProvider"  {

        note as N
        Can be any of:
        ---
        - Full Cardano Node
        - Blockfrost
        - Maestro
        - Kupo + Ogmios
        end note
    }

    component Kupo as "Kupo\nIndexer" <<Cardano>>  {
        database KupoDB as "MATCHES:
        --
        Transactions
        Metadata
        UTxOs
        --
        "
    }

    component WebServer <<DApp>>
    component Interactions  <<DApp>> as "Interactions\nService" {
        usecase TxBuilding as "Transaction\nBuilding"

    }
    component Lookups <<DApp>> as "Lookups\nService" {
        usecase Querying as "Querying"
    }
    component ChainSync <<DApp>>  as "Chain Sync\nService"{
        control Monitoring as "Monitors matches and\n updates projections"
    }
    component Projections   as "Projections"{

        database  LocalDB as "
        --
        Profiles
        Ranks
        Promotions
        Achievements
        Memmberships
        --
        "
    }

    portin webserverPort as "."
    portin interactionsPort as "."
    portin queryPort as "."

    WebServer - webserverPort
    Interactions - interactionsPort
    Lookups - queryPort

    Interactions -->> CardanoProvider : query\n and \n submit \nsigned tx
    Lookups --> CardanoProvider : veryfy\n scripts\n availability

    ChainSync --> Kupo : monitor
    ChainSync --> CardanoProvider : get mintingpolicy & addresses)
    ChainSync --> Projections : uspert
    Lookups --> Projections : query



}
interface InteractionsAPI as "Interactions API"
interface QueryAPI as "Query API"
interactionsPort -up- InteractionsAPI
queryPort -up- QueryAPI



cloud BlockchainNetwork as "Cardano Blockchain\nNetwork" {
    note as SmarContracts
    Smart Contracts &
    Minting Policies
    for BJJ Protocol
    end note
}


User -> UI : use
WebBrowser - webserverPort
UI --> InteractionsAPI : build\n tx
UI --> QueryAPI : query

UI -down-> BrowserWallet : "sign\n built tx"
User -> BrowserWallet : "sign tx"
BrowserWallet --> BlockchainNetwork : "submit\n signed tx"


Kupo -down-- BlockchainNetwork : monitor

CardanoProvider -down-- BlockchainNetwork

AdminCLI -up- CardanoProvider

Admin -up- AdminCLI : admin tasks (eg. deploy\n new contracts)

@enduml